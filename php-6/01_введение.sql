
-- тут будет теория по sql

-- phpMyadmin - openserver - интерфейс для управления бд

-- база данных (бд) - это набор файлов, в которых хранятся данные. Чтобы этими данными воспользоваться, делается запрос к файлу, получаем файлы и далее что-то с ними делаем (выводим на экран, ...)
-- sql - это язык запросов, который позволяет работать с данными
-- есть реляционные бд и нереляционные. Реляционные бд сложнее, т.к. имеют связи (товары и отзывы именно к этим товарам). 
-- Реляционные бд - mySQL, postgreSQL, MariaDB
-- Неряционные бд - mongoDB, Reddis, NoSQL

-- пользователь - root, без пароля
-- Сервер: 127.0.0.1:3306 - порт локального сервера mySQL

-- Сервер баз данных:
-- Сервер: 127.0.0.1 via TCP/IP
-- Тип сервера: MySQL
-- Соединение сервера: SSL не используется 
-- Версия сервера: 8.0.30 - MySQL Community Server - GPL
-- Версия протокола: 10
-- Пользователь: root@localhost
-- Кодировка сервера: UTF-8 Unicode (utf8mb4)
-- Веб-сервер:
-- Apache
-- Версия клиента базы данных: libmysql - mysqlnd 8.0.22
-- PHP расширение: mysqli 
-- Версия PHP: 8.0.22

-- создать бд => имя wayup, кодировка utf8mb3_general_ci поддерживает кирилицу
-- создаём таблицу с именем articles с 4мя столбцами. Таблица - аналог excel, обычная таблица
-- каждая сущность таблицы в реляционных бд должна иметь идентификатор (id) - это уникальный ключ записи, по которому можно потом обратиться

-- имена - это заголовки столбцов в таблице sql

-- имя - id
-- тип - int
-- длина/значения - 11 => сколько символов будет в числе
-- атрибут - unsigned => чтобы число не было отрицательным
-- A_I - auto_increment - автоматически ставит идентификаторы => primary, id

-- имя - title
-- тип - varchar => кусок текста, используется для небольшого количества текста
-- длина - 255 => длина символов, которые мы можем записать
-- по умолчанию - null => если в поле title ничего не передаётся, то по умолчанию будет null. У полей, которые могут быть пустыми, по умолчанию нужно указывать null
-- сравнение - это кодировка, мы её уже добавили, поэтому пропускаем

-- имя - body
-- тип - text => может быть много текста
-- длина - не указываем
-- по умолчанию - null, может быть пустым

-- имя - category 
-- тип - varchar
-- длина - 100
-- по умолчанию - как определено: Без категории

-- => добавляем ещё одно поле => "вперёд"

-- имя - created_at - дата и время, когда запись была добавлена
-- тип - timestamp - для хранения даты
-- по умолчанию - current_timestamp 
-- => сохранить

-- => у нас есть бд с именем wayup, в которой есть одна таблица articles
-- Если нажать "структура", то увидим эту таблицу
-- нажимаем "вставить" и можем добавлять новые записи в таблицу articles 
-- добавляем новые данные, заполняем поле title, body и category и нажимаем "вперёд"
-- видим, что таблица изменилась на вкладке "обзор", id у этой записи = 1
-- добавляем ещё одну запись, id у этой записи = 2
-- удаляем запись с id = 2
-- добавляем ещё одну запись и id у этой записи = 3! и теперь далее записи будут добавляться после 3, т.е. 4, 5 и т.д.
-- => бд - это набор таблиц, в которых есть записи и мы работаем с этими записями
-- Для работы с бд используется язык запросов sql

-- все запросы по выбору, изменению, добавлению и удалению можно делать через интерфейс phpMyAdmin руками, запросами sql или через PHP 

--  выбор данных SELECT:
-- выбрать все (*) поля из таблицы articles:
SELECT * FROM `articles`
-- SELECT - выбрать
-- * - все поля
-- FROM `articles` - из таблицы articles
-- Во вкладкe SQL можно писать свои запросы
-- ОБРАТНЫЕ КОВЫЧКИ МОЖНО НЕ ПИСАТЬ!!! 

-- написать запрос, который вернёт все поля из таблицы articles, у которых поле category имеет значение "Без категории":
SELECT * FROM `articles` WHERE `category` = 'Без категории' 
-- `category` - именно обратные ковычки!
-- или без обратных ковычек
SELECT * FROM articles WHERE category = 'Без категории'
-- select * - выбрать все поля (*)
-- FROM 'articles' - из таблицы articles
-- WHERE 'category' = 'Без категории' - где значения равны 'Без категории'

-- написать запрос, который вернёт только первые две записи из таблицы articles, у которых поле category имеет значение "Без категории":
SELECT * FROM `articles` WHERE `category` = 'Без категории' LIMIT 2

-- написать запрос, который вернёт поля title и body из таблицы articles
SELECT title, body FROM `articles`

-- написать запрос, который вернёт поле со значением id = 1 из таблицы articles
SELECT * FROM `articles` WHERE `id` = 1


-- добавление данных INSERT:
-- Добавляем в таблицу articles новое поле, в котором поля title, body , category, created_at имеют значения: Заголовок, Основной текст, Новая категория, CURRENT_TIMESTAMP, соответственно
-- ковычки здесь внутри двойных сначала обратные (или без кавычек), а потом обычные (обязательно), иначе ошибка!!!!
INSERT INTO `articles` (`title`, `body`, `category`, `created_at`) VALUES ('Test', 'Test body', 'New', CURRENT_TIMESTAMP);


-- изменение данных UPDATE:
-- изменить в таблице articles поля title,.. на другие в поле с id = 5
UPDATE `articles` SET `title` = 'Some title 1', `body` = 'Some body 1', `category` = 'Test 1' WHERE `id` = 5;


-- Удаление данных из таблицы DELETE
-- удалить запись из таблицы articles, у которой id = 10
DELETE FROM `articles` WHERE `id` = 10;
 